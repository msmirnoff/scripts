#!/usr/bin/env ruby

require './server'

public_key_file = "#{ENV['HOME']}/.ssh/id_rsa.pub"

# will generate a 2048 bit encrypted public-private key pair,
# by default it will be stored in /home/{user}/.ssh/id_pub & id_rsa respectively.
if !File.exists?(public_key_file)
  command("ssh-keygen -t rsa")
end

# we have to add our public key to server, so that server can question the user
# for private key, matching it with public key for authentication. By default,
# ssh looks in a file located at /home/{user}/.ssh/authorized_keys2

rsa = File.read(public_key_file)

authorized_keys_file = "~/.ssh/authorized_keys2"
Server.load.each do |server|
  puts "uploading key to #{server.host}"
  found = server.ssh("mkdir ~/.ssh && touch ~/.ssh/authorized_keys2 && grep \\\"#{rsa}\\\" #{authorized_keys_file} | wc -l")
	puts "found = #{found}"
	key_uploaded = found.to_i > 0
  server.ssh("echo \\\"#{rsa}\\\" >> #{authorized_keys_file}") unless key_uploaded
end

